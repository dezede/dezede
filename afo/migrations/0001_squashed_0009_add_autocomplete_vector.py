# Generated by Django 3.2.13 on 2024-04-09 14:58

from django.conf import settings
import django.contrib.postgres.search
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    replaces = [('afo', '0001_initial'), ('afo', '0002_import_from_libretto'), ('afo', '0003_auto_20150424_2353'), ('afo', '0004_auto_20150430_1721'), ('afo', '0005_add_owner'), ('afo', '0006_auto_20150507_1835'), ('afo', '0007_auto_20180323_1925'), ('afo', '0008_auto_20230710_1417'), ('afo', '0009_add_autocomplete_vector')]

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('libretto', '0001_squashed_0063_upgrade_check_constraints'),
        ('db_search', '0001_create_search_configurations'),
    ]

    operations = [
        migrations.CreateModel(
            name='EvenementAFO',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code_programme', models.CharField(blank=True, max_length=55, verbose_name='code du programme')),
                ('exonerees', models.PositiveIntegerField(blank=True, null=True, verbose_name='entrées exonérées')),
                ('payantes', models.PositiveIntegerField(blank=True, null=True, verbose_name='entrées payantes')),
                ('scolaires', models.PositiveIntegerField(blank=True, null=True, verbose_name='entrées scolaires')),
                ('frequentation', models.PositiveIntegerField(blank=True, null=True, verbose_name='fréquentation totale')),
                ('jauge', models.PositiveIntegerField(blank=True, null=True, verbose_name='jauge')),
                ('evenement', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='afo', to='libretto.evenement', verbose_name='événement')),
            ],
        ),
        migrations.CreateModel(
            name='LieuAFO',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code_postal', models.CharField(blank=True, max_length=10, verbose_name='code postal')),
                ('type_de_scene', models.CharField(blank=True, choices=[('N', 'nationale'), ('C', 'conventionnée')], max_length=1, verbose_name='type de scène')),
                ('lieu', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='afo', to='libretto.lieu', verbose_name='lieu ou institution')),
            ],
        ),
        migrations.AlterModelOptions(
            name='evenementafo',
            options={'verbose_name': 'événement AFO', 'verbose_name_plural': 'événements AFO'},
        ),
        migrations.AlterModelOptions(
            name='lieuafo',
            options={'verbose_name': 'lieu ou institution AFO', 'verbose_name_plural': 'lieux et institutions AFO'},
        ),
        migrations.AddField(
            model_name='evenementafo',
            name='modalite_de_production',
            field=models.CharField(blank=True, choices=[('P', 'participation aux frais'), ('A', 'autoproduction'), ('Ce', 'contrat de cession'), ('Cp', 'contrat de coproduction'), ('Cr', 'contrat de coréalisation')], max_length=2, verbose_name='modalité de production'),
        ),
        migrations.AddField(
            model_name='evenementafo',
            name='nom_festival',
            field=models.CharField(blank=True, max_length=80, verbose_name='nom du festival'),
        ),
        migrations.AddField(
            model_name='evenementafo',
            name='nomenclature',
            field=models.TextField(blank=True, verbose_name='nomenclature'),
        ),
        migrations.AddField(
            model_name='evenementafo',
            name='permanents',
            field=models.PositiveIntegerField(blank=True, null=True, verbose_name='nombre de musiciens permanents convoqués (dont remplaçants)'),
        ),
        migrations.AddField(
            model_name='evenementafo',
            name='presentation_specifique',
            field=models.CharField(blank=True, choices=[('C', 'concert commenté / présenté'), ('P', 'concert participatif'), ('A', 'autre')], max_length=1, verbose_name='présentation spécifique'),
        ),
        migrations.AddField(
            model_name='evenementafo',
            name='public_specifique',
            field=models.CharField(blank=True, choices=[('P', 'puplic de proximité'), ('E', 'public empêché (santé, handicap, justice)'), ('S', 'seniors'), ('J', 'jeunes'), ('JS', 'jeunes en temps scolaire'), ('JV', 'jeunes hors temps scolaire')], max_length=2, verbose_name='public spécifique'),
        ),
        migrations.AddField(
            model_name='evenementafo',
            name='supplementaires',
            field=models.PositiveIntegerField(blank=True, null=True, verbose_name='nombre de musiciens supplémentaires convoqués'),
        ),
        migrations.AddField(
            model_name='evenementafo',
            name='titre_programme',
            field=models.CharField(blank=True, max_length=200, verbose_name='titre du programme'),
        ),
        migrations.AddField(
            model_name='evenementafo',
            name='tournee',
            field=models.CharField(blank=True, max_length=60, verbose_name='code ou titre de la tournée'),
        ),
        migrations.AddField(
            model_name='evenementafo',
            name='type_de_programme',
            field=models.CharField(blank=True, choices=[('LS', 'lyrique version scénique'), ('MC', 'musique de chambre'), ('LC', 'lyrique version concert'), ('S', 'symphonique (dont chœur / récital)'), ('C', 'chorégraphique'), ('A', 'autre')], max_length=2, verbose_name='typologie artistique du programme'),
        ),
        migrations.AddField(
            model_name='lieuafo',
            name='type_de_salle',
            field=models.CharField(blank=True, choices=[('M', 'dédiée à la musique'), ('P', 'pluridisciplinaire'), ('A', 'autre')], max_length=1, verbose_name='type_de_salle'),
        ),
        migrations.AlterField(
            model_name='evenementafo',
            name='code_programme',
            field=models.CharField(blank=True, max_length=60, verbose_name='code du programme'),
        ),
        migrations.AddField(
            model_name='evenementafo',
            name='owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='evenementafo', to=settings.AUTH_USER_MODEL, verbose_name='propriétaire'),
        ),
        migrations.AddField(
            model_name='lieuafo',
            name='owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='lieuafo', to=settings.AUTH_USER_MODEL, verbose_name='propriétaire'),
        ),
        migrations.AddField(
            model_name='evenementafo',
            name='cycle',
            field=models.CharField(blank=True, max_length=40, verbose_name='cycle'),
        ),
        migrations.AddField(
            model_name='evenementafo',
            name='remplacants',
            field=models.PositiveIntegerField(blank=True, null=True, verbose_name='nombre de musiciens remplaçants'),
        ),
        migrations.AlterField(
            model_name='evenementafo',
            name='modalite_de_production',
            field=models.CharField(blank=True, choices=[('P', 'participation aux frais'), ('A', 'autoproduction'), ('Ce', 'contrat de cession'), ('Cp', 'contrat de coproduction'), ('Cr', 'contrat de coréalisation'), ('L', 'location')], max_length=2, verbose_name='modalité de production'),
        ),
        migrations.AlterField(
            model_name='evenementafo',
            name='presentation_specifique',
            field=models.CharField(blank=True, choices=[('C', 'concert commenté/présenté'), ('P', 'concert participatif'), ('A', 'autre')], max_length=1, verbose_name='présentation spécifique'),
        ),
        migrations.AlterField(
            model_name='evenementafo',
            name='public_specifique',
            field=models.CharField(blank=True, choices=[('P', 'public de proximité'), ('E', 'public empêché (santé, handicap, justice)'), ('S', 'seniors'), ('J', 'jeunes'), ('JS', 'jeunes en temps scolaire'), ('JV', 'jeunes hors temps scolaire')], max_length=2, verbose_name='public spécifique'),
        ),
        migrations.AlterField(
            model_name='evenementafo',
            name='type_de_programme',
            field=models.CharField(blank=True, choices=[('LS', 'lyrique version scénique'), ('MC', 'musique de chambre'), ('LC', 'lyrique version concert'), ('S', 'symphonique (dont chœur/récital)'), ('C', 'chorégraphique'), ('A', 'autre')], max_length=2, verbose_name='typologie artistique du programme'),
        ),
        migrations.AlterField(
            model_name='lieuafo',
            name='type_de_salle',
            field=models.CharField(blank=True, choices=[('M', 'dédiée à la musique'), ('P', 'pluridisciplinaire'), ('A', 'autre')], max_length=1, verbose_name='type de salle'),
        ),
        migrations.AddField(
            model_name='evenementafo',
            name='search_vector',
            field=django.contrib.postgres.search.SearchVectorField(blank=True, editable=False, null=True),
        ),
        migrations.AddField(
            model_name='lieuafo',
            name='search_vector',
            field=django.contrib.postgres.search.SearchVectorField(blank=True, editable=False, null=True),
        ),
        migrations.AddField(
            model_name='evenementafo',
            name='autocomplete_vector',
            field=django.contrib.postgres.search.SearchVectorField(blank=True, editable=False, null=True),
        ),
        migrations.AddField(
            model_name='lieuafo',
            name='autocomplete_vector',
            field=django.contrib.postgres.search.SearchVectorField(blank=True, editable=False, null=True),
        ),
    ]
