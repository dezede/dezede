# Generated by Django 3.2.25 on 2025-08-26 15:01

from django.db import migrations, models
import django.db.models.deletion
import modelcluster.fields
import wagtail.fields
import wagtail.snippets.blocks


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('libretto', '0002_auto_20250727_0352'),
        ('wagtailcore', '0089_log_entry_data_json_null_to_object'),
        ('wagtailimages', '0025_alter_image_file_alter_rendition_file'),
    ]

    operations = [
        migrations.CreateModel(
            name='Letter',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('transcription', wagtail.fields.RichTextField(blank=True, verbose_name='transcription')),
                ('description', wagtail.fields.RichTextField(blank=True, verbose_name='description')),
                ('writing_date', models.DateField(blank=True, db_index=True, help_text='Exemple\xa0: « 14/7/1789 » pour le 14 juillet 1789. En cas de date approximative, saisir le premier jour du mois («\xa01/10/1678\xa0» pour octobre 1678) ou de l’année («\xa01/1/1830\xa0» pour 1830).', null=True, verbose_name='date')),
                ('writing_date_approx', models.CharField(blank=True, help_text='Ne remplir que si la date est approximative. Par exemple\xa0: «\xa01870\xa0», «\xa0octobre 1812\xa0», «\xa0été 1967\xa0».', max_length=60, verbose_name='date (approximative)')),
                ('writing_heure', models.TimeField(blank=True, db_index=True, help_text='Exemple\xa0: « 19:30 » pour 19h30.', null=True, verbose_name='heure')),
                ('writing_heure_approx', models.CharField(blank=True, help_text='Ne remplir que si l’heure est approximative. Par exemple\xa0: «\xa0matinée\xa0», «\xa0soirée\xa0».', max_length=30, verbose_name='heure (approximative)')),
                ('writing_lieu_approx', models.CharField(blank=True, help_text='Ne remplir que si le lieu (ou l’institution) est approximatif(ve).', max_length=50, verbose_name='lieu (approximatif)')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='sent_letters', to='libretto.individu', verbose_name='expéditeur')),
                ('writing_lieu', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='letter_writing_set', to='libretto.lieu', verbose_name='lieu')),
            ],
            options={
                'verbose_name': 'lettre',
                'verbose_name_plural': 'lettres',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='LetterIndex',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('description', wagtail.fields.RichTextField(blank=True, verbose_name='description')),
            ],
            options={
                'verbose_name': 'index de lettres',
                'verbose_name_plural': 'index de lettres',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='LetterRecipient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('letter', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='letter_recipients', to='correspondence.letter')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='letter_recipients', to='libretto.individu', verbose_name='individu')),
            ],
            options={
                'verbose_name': 'destinataire',
                'verbose_name_plural': 'destinataires',
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LetterImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('name', models.CharField(help_text='Exemple\u202f: «\u202fPage 1\u202f» ou «\u202fEnveloppe\u202f»', max_length=20, verbose_name='nom')),
                ('references', wagtail.fields.StreamField([('lieu', wagtail.snippets.blocks.SnippetChooserBlock('libretto.Lieu')), ('individu', wagtail.snippets.blocks.SnippetChooserBlock('libretto.Individu')), ('ensemble', wagtail.snippets.blocks.SnippetChooserBlock('libretto.Ensemble')), ('oeuvre', wagtail.snippets.blocks.SnippetChooserBlock('libretto.Oeuvre')), ('evenement', wagtail.snippets.blocks.SnippetChooserBlock('libretto.Evenement')), ('partie', wagtail.snippets.blocks.SnippetChooserBlock('libretto.Partie'))], blank=True, use_json_field=True, verbose_name='références')),
                ('image', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='wagtailimages.image', verbose_name='image')),
                ('letter', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='letter_images', to='correspondence.letter')),
            ],
            options={
                'verbose_name': 'image de lettre',
                'verbose_name_plural': 'images de lettres',
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LetterCorpus',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('description', wagtail.fields.RichTextField(blank=True, verbose_name='description')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='letter_corpuses', to='libretto.individu', verbose_name='individu')),
            ],
            options={
                'verbose_name': 'corpus de lettres',
                'verbose_name_plural': 'corpus de lettres',
            },
            bases=('wagtailcore.page',),
        ),
    ]
