# Generated by Django 3.2.13 on 2023-10-03 17:28

import django.contrib.postgres.indexes
import django.contrib.postgres.search
from django.db import migrations
import django.db.models.expressions

from db_search.sql import UpdateAllSearchVectors


class Migration(migrations.Migration):

    dependencies = [
        ('libretto', '0057_alter_oeuvre_sujet'),
        # FIXME: Enable again when applied in production.
        # ('db_search', '0001_create_search_configurations'),
    ]

    operations = [
        migrations.RemoveIndex(
            model_name='elementdedistribution',
            name='elementdedistribution_search',
        ),
        migrations.RemoveIndex(
            model_name='elementdeprogramme',
            name='elementdeprogramme_search',
        ),
        migrations.RemoveIndex(
            model_name='typedeparentedindividus',
            name='typedeparentedindividus_search',
        ),
        migrations.RemoveIndex(
            model_name='typedeparentedoeuvres',
            name='typedeparentedoeuvres_search',
        ),
        migrations.AddField(
            model_name='auteur',
            name='autocomplete_vector',
            field=django.contrib.postgres.search.SearchVectorField(blank=True, editable=False, null=True),
        ),
        migrations.AddField(
            model_name='caracteristiquedeprogramme',
            name='autocomplete_vector',
            field=django.contrib.postgres.search.SearchVectorField(blank=True, editable=False, null=True),
        ),
        migrations.AddField(
            model_name='elementdedistribution',
            name='autocomplete_vector',
            field=django.contrib.postgres.search.SearchVectorField(blank=True, editable=False, null=True),
        ),
        migrations.AddField(
            model_name='elementdeprogramme',
            name='autocomplete_vector',
            field=django.contrib.postgres.search.SearchVectorField(blank=True, editable=False, null=True),
        ),
        migrations.AddField(
            model_name='ensemble',
            name='autocomplete_vector',
            field=django.contrib.postgres.search.SearchVectorField(blank=True, editable=False, null=True),
        ),
        migrations.AddField(
            model_name='etat',
            name='autocomplete_vector',
            field=django.contrib.postgres.search.SearchVectorField(blank=True, editable=False, null=True),
        ),
        migrations.AddField(
            model_name='evenement',
            name='autocomplete_vector',
            field=django.contrib.postgres.search.SearchVectorField(blank=True, editable=False, null=True),
        ),
        migrations.AddField(
            model_name='genredoeuvre',
            name='autocomplete_vector',
            field=django.contrib.postgres.search.SearchVectorField(blank=True, editable=False, null=True),
        ),
        migrations.AddField(
            model_name='individu',
            name='autocomplete_vector',
            field=django.contrib.postgres.search.SearchVectorField(blank=True, editable=False, null=True),
        ),
        migrations.AddField(
            model_name='lieu',
            name='autocomplete_vector',
            field=django.contrib.postgres.search.SearchVectorField(blank=True, editable=False, null=True),
        ),
        migrations.AddField(
            model_name='membre',
            name='autocomplete_vector',
            field=django.contrib.postgres.search.SearchVectorField(blank=True, editable=False, null=True),
        ),
        migrations.AddField(
            model_name='naturedelieu',
            name='autocomplete_vector',
            field=django.contrib.postgres.search.SearchVectorField(blank=True, editable=False, null=True),
        ),
        migrations.AddField(
            model_name='oeuvre',
            name='autocomplete_vector',
            field=django.contrib.postgres.search.SearchVectorField(blank=True, editable=False, null=True),
        ),
        migrations.AddField(
            model_name='parentedindividus',
            name='autocomplete_vector',
            field=django.contrib.postgres.search.SearchVectorField(blank=True, editable=False, null=True),
        ),
        migrations.AddField(
            model_name='parentedoeuvres',
            name='autocomplete_vector',
            field=django.contrib.postgres.search.SearchVectorField(blank=True, editable=False, null=True),
        ),
        migrations.AddField(
            model_name='partie',
            name='autocomplete_vector',
            field=django.contrib.postgres.search.SearchVectorField(blank=True, editable=False, null=True),
        ),
        migrations.AddField(
            model_name='profession',
            name='autocomplete_vector',
            field=django.contrib.postgres.search.SearchVectorField(blank=True, editable=False, null=True),
        ),
        migrations.AddField(
            model_name='pupitre',
            name='autocomplete_vector',
            field=django.contrib.postgres.search.SearchVectorField(blank=True, editable=False, null=True),
        ),
        migrations.AddField(
            model_name='saison',
            name='autocomplete_vector',
            field=django.contrib.postgres.search.SearchVectorField(blank=True, editable=False, null=True),
        ),
        migrations.AddField(
            model_name='source',
            name='autocomplete_vector',
            field=django.contrib.postgres.search.SearchVectorField(blank=True, editable=False, null=True),
        ),
        migrations.AddField(
            model_name='typedecaracteristiquedeprogramme',
            name='autocomplete_vector',
            field=django.contrib.postgres.search.SearchVectorField(blank=True, editable=False, null=True),
        ),
        migrations.AddField(
            model_name='typedensemble',
            name='autocomplete_vector',
            field=django.contrib.postgres.search.SearchVectorField(blank=True, editable=False, null=True),
        ),
        migrations.AddField(
            model_name='typedeparentedindividus',
            name='autocomplete_vector',
            field=django.contrib.postgres.search.SearchVectorField(blank=True, editable=False, null=True),
        ),
        migrations.AddField(
            model_name='typedeparentedoeuvres',
            name='autocomplete_vector',
            field=django.contrib.postgres.search.SearchVectorField(blank=True, editable=False, null=True),
        ),
        migrations.AddField(
            model_name='typedesource',
            name='autocomplete_vector',
            field=django.contrib.postgres.search.SearchVectorField(blank=True, editable=False, null=True),
        ),
        migrations.AddIndex(
            model_name='caracteristiquedeprogramme',
            index=django.contrib.postgres.indexes.GinIndex(django.db.models.expressions.F('autocomplete_vector'), name='caracprogr_autocomplete'),
        ),
        migrations.AddIndex(
            model_name='elementdedistribution',
            index=django.contrib.postgres.indexes.GinIndex(django.db.models.expressions.F('search_vector'), name='elementdistrib_search'),
        ),
        migrations.AddIndex(
            model_name='elementdedistribution',
            index=django.contrib.postgres.indexes.GinIndex(django.db.models.expressions.F('autocomplete_vector'), name='elementdistrib_autocomplete'),
        ),
        migrations.AddIndex(
            model_name='elementdeprogramme',
            index=django.contrib.postgres.indexes.GinIndex(django.db.models.expressions.F('search_vector'), name='elementprogr_search'),
        ),
        migrations.AddIndex(
            model_name='elementdeprogramme',
            index=django.contrib.postgres.indexes.GinIndex(django.db.models.expressions.F('autocomplete_vector'), name='elementprogr_autocomplete'),
        ),
        migrations.AddIndex(
            model_name='ensemble',
            index=django.contrib.postgres.indexes.GinIndex(django.db.models.expressions.F('autocomplete_vector'), name='ensemble_autocomplete'),
        ),
        migrations.AddIndex(
            model_name='evenement',
            index=django.contrib.postgres.indexes.GinIndex(django.db.models.expressions.F('autocomplete_vector'), name='evenement_autocomplete'),
        ),
        migrations.AddIndex(
            model_name='genredoeuvre',
            index=django.contrib.postgres.indexes.GinIndex(django.db.models.expressions.F('autocomplete_vector'), name='genredoeuvre_autocomplete'),
        ),
        migrations.AddIndex(
            model_name='individu',
            index=django.contrib.postgres.indexes.GinIndex(django.db.models.expressions.F('autocomplete_vector'), name='individu_autocomplete'),
        ),
        migrations.AddIndex(
            model_name='lieu',
            index=django.contrib.postgres.indexes.GinIndex(django.db.models.expressions.F('autocomplete_vector'), name='lieu_autocomplete'),
        ),
        migrations.AddIndex(
            model_name='naturedelieu',
            index=django.contrib.postgres.indexes.GinIndex(django.db.models.expressions.F('autocomplete_vector'), name='naturedelieu_autocomplete'),
        ),
        migrations.AddIndex(
            model_name='oeuvre',
            index=django.contrib.postgres.indexes.GinIndex(django.db.models.expressions.F('autocomplete_vector'), name='oeuvre_autocomplete'),
        ),
        migrations.AddIndex(
            model_name='partie',
            index=django.contrib.postgres.indexes.GinIndex(django.db.models.expressions.F('autocomplete_vector'), name='partie_autocomplete'),
        ),
        migrations.AddIndex(
            model_name='profession',
            index=django.contrib.postgres.indexes.GinIndex(django.db.models.expressions.F('autocomplete_vector'), name='profession_autocomplete'),
        ),
        migrations.AddIndex(
            model_name='pupitre',
            index=django.contrib.postgres.indexes.GinIndex(django.db.models.expressions.F('autocomplete_vector'), name='pupitre_autocomplete'),
        ),
        migrations.AddIndex(
            model_name='source',
            index=django.contrib.postgres.indexes.GinIndex(django.db.models.expressions.F('autocomplete_vector'), name='source_autocomplete'),
        ),
        migrations.AddIndex(
            model_name='typedecaracteristiquedeprogramme',
            index=django.contrib.postgres.indexes.GinIndex(django.db.models.expressions.F('autocomplete_vector'), name='typecaracprogr_autocomplete'),
        ),
        migrations.AddIndex(
            model_name='typedensemble',
            index=django.contrib.postgres.indexes.GinIndex(django.db.models.expressions.F('autocomplete_vector'), name='typedensemble_autocomplete'),
        ),
        migrations.AddIndex(
            model_name='typedeparentedindividus',
            index=django.contrib.postgres.indexes.GinIndex(django.db.models.expressions.F('search_vector'), name='typeparenteindiv_search'),
        ),
        migrations.AddIndex(
            model_name='typedeparentedindividus',
            index=django.contrib.postgres.indexes.GinIndex(django.db.models.expressions.F('autocomplete_vector'), name='typeparenteindiv_autocomplete'),
        ),
        migrations.AddIndex(
            model_name='typedeparentedoeuvres',
            index=django.contrib.postgres.indexes.GinIndex(django.db.models.expressions.F('search_vector'), name='typeparenteoeuv_search'),
        ),
        migrations.AddIndex(
            model_name='typedeparentedoeuvres',
            index=django.contrib.postgres.indexes.GinIndex(django.db.models.expressions.F('autocomplete_vector'), name='typeparenteoeuv_autocomplete'),
        ),
        migrations.AddIndex(
            model_name='typedesource',
            index=django.contrib.postgres.indexes.GinIndex(django.db.models.expressions.F('autocomplete_vector'), name='typedesource_autocomplete'),
        ),
        UpdateAllSearchVectors('caracteristiquedeprogramme', ['valeur']),
        UpdateAllSearchVectors('elementdedistribution', []),
        UpdateAllSearchVectors('elementdeprogramme', []),
        UpdateAllSearchVectors('ensemble', ['particule_nom', 'nom']),
        UpdateAllSearchVectors('evenement',
                               ['circonstance', 'debut_date', 'debut_heure', 'debut_lieu_approx', 'debut_date_approx',
                                'debut_heure_approx']),
        UpdateAllSearchVectors('genredoeuvre', ['nom', 'nom_pluriel']),
        UpdateAllSearchVectors('individu', ['nom', 'nom_naissance', 'prenoms', 'pseudonyme']),
        UpdateAllSearchVectors('lieu', ['nom']),
        UpdateAllSearchVectors('naturedelieu', ['nom', 'nom_pluriel']),
        UpdateAllSearchVectors('oeuvre',
                               ['prefixe_titre', 'titre', 'prefixe_titre_secondaire', 'titre_secondaire', 'numero',
                                'coupe', 'tempo', 'sujet', 'surnom', 'nom_courant', 'incipit', 'opus', 'ict']),
        UpdateAllSearchVectors('partie', ['nom', 'nom_pluriel']),
        UpdateAllSearchVectors('profession', ['nom', 'nom_pluriel', 'nom_feminin', 'nom_feminin_pluriel']),
        UpdateAllSearchVectors('pupitre', []),
        UpdateAllSearchVectors('source', ['titre', 'date', 'date_approx', 'numero', 'lieu_conservation', 'cote']),
        UpdateAllSearchVectors('typedecaracteristiquedeprogramme', ['nom', 'nom_pluriel']),
        UpdateAllSearchVectors('typedensemble', ['nom', 'nom_pluriel']),
        UpdateAllSearchVectors('typedeparentedindividus', ['nom', 'nom_relatif', 'nom_pluriel', 'nom_relatif_pluriel']),
        UpdateAllSearchVectors('typedeparentedoeuvres', ['nom', 'nom_relatif', 'nom_pluriel', 'nom_relatif_pluriel', ]),
        UpdateAllSearchVectors('typedesource', ['nom', 'nom_pluriel']),
    ]
