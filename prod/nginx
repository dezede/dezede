# Zones created to avoid DDOS attacks
limit_conn_zone $binary_remote_addr zone=dezede_django_conn:1m;
limit_req_zone $binary_remote_addr zone=dezede_django_req:1m rate=20r/s;
limit_conn_zone $binary_remote_addr zone=dezede_static_conn:10m;
limit_req_zone $binary_remote_addr zone=dezede_static_req:10m rate=100r/s;

server {
  listen 80;
  server_name {{ server_name }};
  rewrite ^(.*) https://$host$1 permanent;
}

server {
  listen 443 ssl;
  server_name {{ server_name }};
  ssl_certificate     {{ ssl_certificate }};
  ssl_certificate_key {{ ssl_key }};

  error_page 403 404 =404 /404;
  error_page 502 /502.html;
  error_page 503 /503.html;

  location ~ /50\d\.html {
    root {{ project_path }}/prod;
    allow all;
    internal;
  }

  gzip on;
  gzip_vary on;
  gzip_types
    text/plain
    text/css
    text/javascript
    application/javascript
    image/png
    image/svg+xml
    image/jpeg
    image/x-icon
    application/pdf
    application/octet-stream;

  add_header Cache-Control public;
  # HSTS
  add_header Strict-Transport-Security "max-age=86400";
  # Clickjacking protection
  add_header X-Frame-Options SAMEORIGIN;
  # Disables browser content-type sniffing
  add_header X-Content-Type-Options nosniff;
  # Enables cross-site scripting protection
  add_header X-XSS-Protection "1; mode=block";
  # Browsers will only load data from these sources
  add_header Content-Security-Policy "
    default-src 'self' https://www.google-analytics.com;
    script-src 'self' 'unsafe-inline' 'unsafe-eval' https://www.googletagmanager.com https://cdnjs.cloudflare.com https://code.jquery.com;
    img-src 'self' data: https://cdnjs.cloudflare.com https://a.tile.openstreetmap.org https://b.tile.openstreetmap.org https://c.tile.openstreetmap.org https://code.jquery.com;
    style-src 'self' 'unsafe-inline' https://cdnjs.cloudflare.com https://code.jquery.com;
    font-src 'self';
    frame-src 'self' https://docs.google.com;
    object-src 'self'";

  client_max_body_size 2000M;

  # Parameters to avoid DDOS attacks on static files
  limit_conn dezede_static_conn 100;
  limit_req zone=dezede_static_req burst=500;

  location /media {
    alias {{ project_path }}/media;
    allow all;
    expires 1y;
  }

  location /static {
    alias {{ project_path }}/static;
    allow all;
    expires 1w;
  }

  location / {
    proxy_pass http://{{ ip }}:{{ port }};
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Host $http_host;
    proxy_redirect off;
    proxy_connect_timeout 2s;
    proxy_read_timeout {{ timeout }}s;
    proxy_buffering off;

    # Parameters to avoid DDOS attacks on gunicorn
    limit_conn dezede_django_conn 20;
    limit_req zone=dezede_django_req burst=100;
  }
}

server {
  listen 80;
  server_name rq.{{ server_name }};
  location / {
    proxy_pass http://localhost:9181;
    proxy_buffering off;
    auth_basic 'Restricted';
    auth_basic_user_file /etc/nginx/rq.password;
  }
}

{# TODO: Do something cleaner about this. #}
server {
  listen 80;
  server_name afo.dezede.org;
  rewrite ^(.*) https://dezede.org$1 permanent;
}

server {
  listen 443 ssl;
  server_name afo.dezede.org;
  ssl_certificate     {{ ssl_certificate }};
  ssl_certificate_key {{ ssl_key }};
  rewrite ^(.*) https://dezede.org$1 permanent;
}
